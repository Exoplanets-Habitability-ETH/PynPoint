language: python

matrix:
    include:

        # - os: osx
        #   language: generic
        #   env:
        #     - TOXENV=py27
        #     - NUMBA_DISABLE_JIT=1
        #
        # - os: osx
        #   language: generic
        #   env:
        #     - TOXENV=py36
        #     - NUMBA_DISABLE_JIT=1

        - os: osx
          language: generic
          env:
            - PYTHON=3.7.0
            - TOXENV=py37
            - NUMBA_DISABLE_JIT=1

        # - os: linux
        #   python: 2.7
        #   env:
        #     - TOXENV=py27
        #     - NUMBA_DISABLE_JIT=1

        # - os: linux
        #   python: 3.6
        #   env:
        #     - TOXENV=py36
        #     - NUMBA_DISABLE_JIT=1

        # - os: linux
        #   python: 3.7
        #   dist: xenial
        #   sudo: true
        #   env:
        #     - TOXENV=py37
        #     - NUMBA_DISABLE_JIT=1

before_install:
  - echo $TRAVIS_OS_NAME
  - echo $PYTHON
  - |
    if [ "$TRAVIS_OS_NAME" == "osx" ] && [ "$PYTHON" == "3.7.0" ]; then
      brew update
      # Per the `pyenv homebrew recommendations <https://github.com/yyuu/pyenv/wiki#suggested-build-environment>`_.
      brew install openssl readline
      # See https://docs.travis-ci.com/user/osx-ci-environment/#A-note-on-upgrading-packages.
      # I didn't do this above because it works and I'm lazy.
      brew outdated pyenv || brew upgrade pyenv
      # virtualenv doesn't work without pyenv knowledge. venv in Python 3.3
      # doesn't provide Pip by default. So, use `pyenv-virtualenv <https://github.com/yyuu/pyenv-virtualenv/blob/master/README.md>`_.
      brew install pyenv-virtualenv
      pyenv install $PYTHON
      # I would expect something like ``pyenv init; pyenv local $PYTHON`` or
      # ``pyenv shell $PYTHON`` would work, but ``pyenv init`` doesn't seem to
      # modify the Bash environment. ??? So, I hand-set the variables instead.
      export PYENV_VERSION=$PYTHON
      export PATH="/Users/travis/.pyenv/shims:${PATH}"
      pyenv-virtualenv venv
      source venv/bin/activate
      # A manual check that the correct version of Python is running.
      python --version
    fi

install:
  - python -m pip install -U pip
  - pip install numpy
  - pip install enum34
  - pip install -r requirements.txt
  - pip install tox
  - pip install coverage
  - pip install coveralls
  - pip install sphinx
  - pip install sphinx_rtd_theme

before_script:
  - mkdir $HOME/.matplotlib
  - "echo 'backend: Agg' > $HOME/.matplotlib/matplotlibrc"

script:
  - tox

after_success:
  - coveralls

notifications:
  email: false
