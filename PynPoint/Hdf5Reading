import os
import h5py


from PynPoint.Processing import ReadingModule


class Hdf5ReadingModule(ReadingModule):

    def __init__(self,
                 name_in,
                 input_filename = None,
                 input_dir = None,
                 tag_dictionary = {}):

        super(Hdf5ReadingModule, self).__init__(name_in, input_dir)

        self.m_filename = input_filename
        self._m_tag_dictionary = tag_dictionary

    def _read_single_hdf5(self,
                          file_in):
        hdf5_file = h5py.File(file_in, mode='a')

        for entry in hdf5_file:
            print entry
        
    def run(self):

        # create list of files to be read
        files = []

        # check is a single input file is given
        if self.m_filename is not None:
            # create file path + filename
            if self.m_input_location.endswith("/"):
                tmp_file = self.m_input_location + self.m_filename
            else:
                tmp_file = self.m_input_location + "/" + self.m_filename

            assert(os.path.isfile(tmp_file), "Error: Input file does not exist. Input requested: " %
                   tmp_file)
            files.append(tmp_file)

        else:
            # look for all .hdf5 files in the directory
            for tmp_file in os.listdir(self.m_input_location):
                if tmp_file.endswith('.hdf5') or tmp_file.endswith('.h5'):
                    files.append(tmp_file)

        for file in files:
            self._read_single_hdf5(file)
